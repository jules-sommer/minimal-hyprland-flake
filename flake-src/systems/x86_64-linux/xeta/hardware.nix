# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usbhid" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/fdbae80e-5cd5-4956-83fb-9da18afe4c28";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/AA35-CFAA";
    fsType = "vfat";
  };

  fileSystems."/mnt/BACKUPS" = {
    device = "/dev/disk/by-uuid/2338a52e-2388-4ae1-b4f7-116ee984b96e";
    fsType = "ext4";
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/3de49731-40bd-4fbd-90d5-959683f18c72"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.interfaces.br-883d5968b1bb.useDHCP = lib.mkDefault true;
  networking.interfaces.br-a95b311adc36.useDHCP = lib.mkDefault true;
  networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  networking.interfaces.enp12s0.useDHCP = lib.mkDefault true;
  networking.interfaces.vboxnet0.useDHCP = lib.mkDefault true;
  networking.interfaces.veth502bdcb.useDHCP = lib.mkDefault true;
  networking.interfaces.veth64f328d.useDHCP = lib.mkDefault true;
  networking.interfaces.veth7a946de.useDHCP = lib.mkDefault true;
  networking.interfaces.wlp13s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
